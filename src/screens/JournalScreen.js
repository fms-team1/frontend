import React, { useEffect, useState } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { NavLink } from 'react-router-dom';
import { getAllCategory, getCategoriesByNeoSection, getFilterTypeList, getJournalList } from '../actions/transactionActions';
import { signout } from '../actions/userActions';
import Dropdown from '../components/Dropdown';
import DropdownByPeriod from '../components/DropdownByPeriod';
import SearchInput from '../components/SearchInput';
import LoadingBox from '../components/LoadingBox';
import MessageBox from '../components/MessageBox';
import RenderAdaptiveTransaction from '../components/RenderAdaptiveTransaction';
import RenderTransaction from '../components/RenderTransaction';

export default function JournalScreen() {

  const dispatch = useDispatch();
  const userSignin = useSelector((state) => state.userSignin);
  const { userInfo } = userSignin;

  const [neoSectionId, setNeoSectionId] = useState(null);
  const [operation, setOperation] = useState(null);
  const [category, setCategory] = useState(null);
  const [startPeriod, setStartPeriod] = useState(null);
  const [endPeriod, setEndPeriod] = useState(null);
  const [wallet, setWallet] = useState(null);
  const [counterparty, setCounterparty] = useState(null);
  const [users, setUsers] = useState(null);

  const listJournal = useSelector((state) => state.listJournal);
  const { loading, error, transactions } = listJournal;
  const categoryList = useSelector((state) => state.categoryList);
  const { categories } = categoryList;
  const filterList = useSelector((state) => state.filterList);
  const { loadingFilter, errorFilter, filterTypeList } = filterList;

  const [media, setMedia] = useState(false);

  useEffect(() => {
    let mounted = true;
    let mountedd = true;
    if(window.matchMedia("(max-width: 620px)").matches) {
      if(mounted) {
        setMedia(true);
      }
    }
    else {
      setMedia(false);
    }
    window.matchMedia("(max-width: 620px)").addEventListener("change", () => {
      if(window.matchMedia("(max-width: 620px)").matches) {
        if(mountedd) {
          setMedia(true);
        }
      }
      else setMedia(false);
        return mountedd = false;
      });
      return () => mounted = false;

    }, [window.matchMedia("(max-width: 620px)").matches]);

  const submitHandler = (neoSectionId = -1) => {
    if(neoSectionId === -1) {
      setNeoSectionId(null);
      dispatch(getAllCategory(userInfo));
    }
    else {
      setNeoSectionId(neoSectionId);
      dispatch(getCategoriesByNeoSection(userInfo, neoSectionId));
    }
  }

  useEffect(() => {
    if(error && error.indexOf("403") !== -1) {
      dispatch(signout());
    }
    dispatch(getJournalList(neoSectionId, operation, category, startPeriod, endPeriod, wallet, counterparty, users));
}, [neoSectionId, operation, category, endPeriod, wallet, counterparty, users]);

  useEffect(() => {
    if(errorFilter && errorFilter.indexOf("403") !== -1) {
      dispatch(signout());
    }
    dispatch(getFilterTypeList(userInfo));
    dispatch(getAllCategory(userInfo));
  }, []);


  return (
    <section className='journal'>
            <div className="journal__top-block">
        <nav className='journal__navbar'>
          <NavLink activeClassName="journal__link--active" className="journal__link" to="/journal/neobis" onClick={() => submitHandler(filterTypeList[2].data[0].id)}>
            <svg height="18" viewBox="20 2 80 16" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
              <path fillRule="evenodd" clipRule="evenodd" d="M89.938 10.04H100.549C100.611 9.68824 100.641 9.33191 100.64 8.97499V7.91004H89.938C89.8495 8.25836 89.8029 8.61589 89.8006 8.97499C89.8037 9.33408 89.8495 9.69161 89.938 10.04ZM100.625 8.97499V7.91004H100.533C100.595 8.26181 100.626 8.61806 100.625 8.97499ZM87.709 10.04H89.938C89.8495 9.69161 89.8037 9.33408 89.8006 8.97499C89.8029 8.61589 89.8495 8.25836 89.938 7.91004H87.7243C87.6121 8.61581 87.6121 9.33431 87.7243 10.04H87.709ZM94.1212 4.71504C95.1777 4.71586 96.1983 5.09435 96.9915 5.77998H99.7548C99.0854 4.64079 98.0747 3.73226 96.8609 3.17842C95.6464 2.62457 94.2877 2.45242 92.9701 2.6854C91.6525 2.91838 90.4403 3.54515 89.4983 4.4802C88.5571 5.41525 87.9319 6.61309 87.709 7.91004H89.938C90.177 7.00175 90.7136 6.19618 91.4663 5.61847C92.2182 5.04078 93.1434 4.72324 94.0983 4.71504H94.1212ZM91.2587 12.17H88.4877C89.1594 13.3053 90.1709 14.21 91.3846 14.761C92.5976 15.3121 93.9541 15.4829 95.2701 15.2503C96.5854 15.0177 97.7961 14.3928 98.738 13.4607C99.68 12.5286 100.307 11.3343 100.533 10.04H98.335C98.151 10.7457 97.7861 11.3932 97.2739 11.9203C96.7625 12.4475 96.1212 12.8366 95.4121 13.0503C94.7037 13.2642 93.951 13.2955 93.2258 13.1414C92.5014 12.9872 91.8289 12.6527 91.2739 12.17H91.2587Z" fill="currentColor"/>
              <path fillRule="evenodd" clipRule="evenodd" d="M48.4647 7.90994H40.0677C39.9752 8.25757 39.929 8.61554 39.9303 8.97487C39.9294 9.33419 39.9756 9.69217 40.0677 10.0399H48.4647C48.5505 9.69119 48.5941 9.33367 48.5945 8.97487C48.5946 8.61607 48.551 8.25862 48.4647 7.90994ZM44.2662 4.71494C44.8353 4.71493 45.3987 4.82513 45.9243 5.03931C46.4499 5.25349 46.9275 5.5674 47.3295 5.96308C47.7314 6.35875 48.0501 6.82844 48.2672 7.34525C48.4843 7.86205 48.5955 8.41582 48.5945 8.97487C48.5941 9.33367 48.5505 9.69119 48.4647 10.0399H50.6785C50.7335 9.68752 50.7616 9.33142 50.7624 8.97487C50.8234 8.10097 50.701 7.22398 50.4025 6.3985C50.1041 5.57302 49.6361 4.81663 49.0276 4.17634C48.4191 3.53604 47.6831 3.02557 46.8653 2.67652C46.0476 2.32747 45.1655 2.14734 44.2738 2.14734C43.3822 2.14734 42.5002 2.32747 41.6824 2.67652C40.8646 3.02557 40.1286 3.53604 39.5201 4.17634C38.9116 4.81663 38.4436 5.57302 38.1452 6.3985C37.8467 7.22398 37.7243 8.10097 37.7853 8.97487C37.7848 9.33179 37.8154 9.68812 37.8769 10.0399H40.0907C39.9985 9.69217 39.9524 9.33419 39.9533 8.97487C39.9532 7.84895 40.4069 6.76885 41.2151 5.97058C42.0233 5.17232 43.1202 4.72088 44.2662 4.71494ZM44.2662 13.2349C43.3049 13.235 42.3709 12.9212 41.6109 12.3428C40.8509 11.7645 40.3081 10.9544 40.0677 10.0399H37.854C38.0788 11.3347 38.7042 12.5299 39.6451 13.463C40.5861 14.396 41.7968 15.0215 43.1125 15.2543C44.4282 15.4871 45.785 15.316 46.9981 14.764C48.2112 14.2121 49.2218 13.3063 49.8921 12.1699H47.1288C46.3389 12.8562 45.3207 13.235 44.2662 13.2349Z" fill="currentColor"/>
              <path fillRule="evenodd" clipRule="evenodd" d="M55.0984 8.97504C55.0984 8.13248 55.3528 7.30884 55.8292 6.60829C56.3056 5.90774 56.9828 5.36178 57.775 5.03935C58.5673 4.71692 59.4392 4.63254 60.2802 4.79692C61.1213 4.96129 61.8939 5.36698 62.5002 5.96275C63.1067 6.55852 63.5196 7.31764 63.6869 8.14396C63.8541 8.97039 63.7683 9.82689 63.4402 10.6053C63.112 11.3837 62.5562 12.049 61.8432 12.5171C61.1302 12.9852 60.2918 13.235 59.4343 13.235C58.2844 13.235 57.1815 12.7862 56.3684 11.9873C55.5553 11.1884 55.0984 10.1048 55.0984 8.97504ZM59.4343 2.585C58.1476 2.58352 56.8895 2.95703 55.8189 3.65827C54.7484 4.35952 53.9136 5.35702 53.4202 6.52452C52.9267 7.69201 52.7968 8.97699 53.0469 10.217C53.297 11.4571 53.9158 12.5963 54.825 13.4908C55.7344 14.3852 56.8932 14.9945 58.155 15.2417C59.4169 15.4889 60.725 15.3628 61.9138 14.8793C63.1027 14.396 64.1189 13.5769 64.8338 12.5259C65.5489 11.4749 65.9305 10.2392 65.9305 8.97504C65.9305 8.13398 65.7615 7.30126 65.4333 6.52452C65.105 5.74778 64.6238 5.04231 64.0175 4.44865C63.4112 3.85498 62.6915 3.38482 61.8997 3.06501C61.1079 2.74521 60.2598 2.58204 59.4037 2.585H59.4343Z" fill="currentColor"/>
              <path fillRule="evenodd" clipRule="evenodd" d="M68.0985 2.58494V8.97497C68.098 8.07587 68.2909 7.18688 68.6645 6.36615C69.0381 5.54543 69.584 4.8115 70.2663 4.21247V2.58494H68.0985ZM70.2663 8.97497C70.2663 8.13212 70.5208 7.3082 70.9976 6.60749C71.4744 5.90677 72.152 5.36075 72.9447 5.03855C73.7375 4.71634 74.6097 4.63241 75.451 4.7974C76.2922 4.96238 77.0648 5.36881 77.6708 5.96534C78.277 6.56186 78.6892 7.32165 78.8556 8.14847C79.022 8.97534 78.935 9.83214 78.606 10.6104C78.277 11.3887 77.7197 12.0535 77.0056 12.5207C76.2915 12.9879 75.4525 13.2365 74.5947 13.235C74.0256 13.235 73.4621 13.1247 72.9365 12.9105C72.4108 12.6963 71.9334 12.3824 71.5314 11.9867C71.1294 11.5911 70.8108 11.1214 70.5937 10.6046C70.3767 10.0878 70.2654 9.53402 70.2663 8.97497ZM74.5947 2.58494C73.3083 2.58494 72.0508 2.95973 70.9813 3.66187C69.9118 4.36401 69.0782 5.36195 68.5859 6.52958C68.0937 7.69719 67.9648 8.98209 68.2158 10.2216C68.4667 11.4611 69.0861 12.5997 69.9957 13.4933C70.9053 14.387 72.0642 14.9957 73.3258 15.2422C74.5874 15.4887 75.8951 15.3622 77.0835 14.8785C78.2716 14.3949 79.2876 13.5759 80.0021 12.5251C80.7166 11.4743 81.0983 10.2388 81.0983 8.97497C81.1052 8.13384 80.9418 7.29977 80.6182 6.52133C80.2937 5.7429 79.8151 5.03575 79.2098 4.44098C78.6044 3.84622 77.8846 3.37581 77.0919 3.05716C76.2996 2.73851 75.4507 2.57794 74.5947 2.58494Z" fill="currentColor"/>
              <path d="M85.434 2.58496H83.2661V15.3574H85.434V2.58496Z" fill="currentColor"/>
              <path fillRule="evenodd" clipRule="evenodd" d="M24.7627 15.3575V13.7375C24.0802 13.1385 23.5344 12.4046 23.1608 11.5839C22.7872 10.7631 22.5943 9.87409 22.5948 8.97499V15.3575H24.7627ZM24.7627 8.97499C24.7627 7.84519 25.2195 6.76165 26.0326 5.96274C26.8457 5.16383 27.9486 4.71506 29.0985 4.71506C30.2485 4.71506 31.3513 5.16383 32.1644 5.96274C32.9776 6.76165 33.4344 7.84519 33.4344 8.97499V13.7375C34.4162 12.8748 35.1082 11.7395 35.4189 10.4819C35.7296 9.22421 35.6442 7.90356 35.1742 6.69461C34.7042 5.48566 33.8717 4.44544 32.7868 3.71155C31.7019 2.97766 30.4157 2.58472 29.0985 2.58472C27.7813 2.58472 26.4952 2.97766 25.4102 3.71155C24.3254 4.44544 23.4928 5.48566 23.0228 6.69461C22.5528 7.90356 22.4676 9.22421 22.7782 10.4819C23.0889 11.7395 23.7809 12.8748 24.7627 13.7375V8.97499ZM33.4497 13.7375V15.3575H35.61V8.97499C35.6114 9.87349 35.4197 10.7622 35.0474 11.5829C34.6751 12.4036 34.1307 13.1378 33.4497 13.7375Z" fill="currentColor"/>
            </svg>
          </NavLink>
          <NavLink exact activeClassName="journal__link--active" className="journal__link" to="/journal"  onClick={() => submitHandler()}>
            <svg width="21" height="14" viewBox="0 0 21 14" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path fillRule="evenodd" clipRule="evenodd" d="M11.7332 7.28373V13.3272H9.85407V11.7237C9.65741 11.92 9.44837 12.1018 9.22724 12.2666C8.29853 12.9593 7.20685 13.3282 6.09015 13.3272C5.34943 13.3284 4.61567 13.1665 3.93091 12.8504C3.24622 12.5342 2.62397 12.0703 2.10035 11.4849C1.5763 10.8997 1.16053 10.2046 0.87769 9.43973C0.594792 8.67484 0.450383 7.85502 0.451298 7.02714C0.450383 5.77958 0.780461 4.55985 1.40039 3.52225C2.02027 2.48466 2.90131 1.67557 3.9328 1.19779C4.96424 0.720008 6.09943 0.59452 7.19483 0.837684C8.28974 1.08085 9.29572 1.68143 10.0856 2.56351C10.8749 3.44559 11.4124 4.56962 11.63 5.79325C11.7177 6.28641 11.7518 6.78666 11.7332 7.28373ZM11.7332 7.28373V7.04935C11.7318 7.9285 11.5653 8.79764 11.2439 9.60013C11.2655 9.54618 11.287 9.49198 11.3073 9.43729C11.5627 8.7493 11.7058 8.02006 11.7332 7.28373ZM9.21979 9.36356C9.63324 8.67191 9.85407 7.85892 9.85407 7.02714H9.83558C9.83558 5.91557 9.44159 4.84891 8.73975 4.06083C8.03785 3.27299 7.08509 2.82743 6.09015 2.82206C5.34577 2.82206 4.61799 3.06864 3.99897 3.5308C3.38001 3.99271 2.89759 4.64945 2.61243 5.41801C2.3277 6.18632 2.25361 7.03178 2.3985 7.84745C2.54389 8.66337 2.90223 9.41263 3.42859 10.0008C3.95502 10.5889 4.62586 10.9893 5.3559 11.1516C6.086 11.3138 6.84296 11.2305 7.53046 10.9124C8.21845 10.594 8.80591 10.055 9.21979 9.36356ZM20.0533 0.716834H18.1737V13.3221H20.0533V0.716834ZM15.8957 0.721961H14.0161V13.3272H15.8957V0.721961Z" fill="currentColor"/>
            </svg>
          </NavLink>
          <NavLink activeClassName="journal__link--active" className="journal__link" to="/journal/neolabs" onClick={() => submitHandler(filterTypeList[2].data[1].id)}>
            <svg height="18" viewBox="20 2 80 16" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path fillRule="evenodd" clipRule="evenodd" d="M91.4562 10.1539H100.66C100.711 9.81209 100.737 9.4661 100.739 9.11945V8.08497H91.4793C91.3187 8.77352 91.3187 9.49647 91.4793 10.185L91.4562 10.1539ZM100.739 9.15048V8.116H100.66C100.715 8.44202 100.747 8.77233 100.757 9.10398L100.739 9.15048ZM89.5349 10.185H91.4562C91.2955 9.49647 91.2955 8.77352 91.4562 8.08497H89.5349C89.4298 8.78009 89.4298 9.4899 89.5349 10.185ZM95.0904 4.92981C96.0039 4.92468 96.8881 5.29255 97.5765 5.96428H99.9742C99.3927 4.8416 98.5159 3.94657 97.4626 3.40123C96.4089 2.85589 95.2307 2.68679 94.0881 2.91698C92.946 3.14717 91.8946 3.76545 91.0784 4.68752C90.2617 5.60959 89.7196 6.79057 89.5256 8.0695H91.4464C91.652 7.16169 92.1233 6.3566 92.7849 5.78216C93.4469 5.20767 94.2617 4.89675 95.0997 4.89878L95.0904 4.92981ZM92.5997 12.285H90.2015C90.7826 13.4076 91.6594 14.3028 92.7127 14.8484C93.7654 15.394 94.9432 15.5636 96.0858 15.3339C97.2284 15.1043 98.2793 14.4868 99.0964 13.5653C99.9131 12.6439 100.456 11.4635 100.65 10.185H98.7293C98.5677 10.8801 98.2492 11.5175 97.8048 12.0363C97.3603 12.555 96.8043 12.938 96.19 13.1485C95.5752 13.3591 94.9224 13.3903 94.2941 13.2391C93.6654 13.0879 93.0821 12.7595 92.5997 12.285Z" fill="currentColor"/>
              <path fillRule="evenodd" clipRule="evenodd" d="M42.3266 8.0539H35.044C34.8834 8.7424 34.8834 9.4654 35.044 10.1539H42.3266C42.4872 9.4654 42.4872 8.7424 42.3266 8.0539ZM38.6876 4.89873C39.685 4.9001 40.6412 5.34375 41.346 6.13225C42.0509 6.92068 42.4469 7.9895 42.4469 9.1039C42.446 9.45304 42.4057 9.80063 42.3266 10.1384H44.2481C44.2994 9.79649 44.3257 9.45056 44.3268 9.1039C44.3484 8.26106 44.2185 7.42188 43.9447 6.63614C43.671 5.85035 43.2586 5.13391 42.7326 4.5292C42.2067 3.92449 41.5778 3.44378 40.8826 3.11553C40.1874 2.78728 39.4401 2.61816 38.6853 2.61816C37.9306 2.61816 37.1837 2.78728 36.4885 3.11553C35.7933 3.44378 35.164 3.92449 34.638 4.5292C34.112 5.13391 33.7001 5.85035 33.4263 6.63614C33.1526 7.42188 33.0227 8.26106 33.0443 9.1039C33.0454 9.45056 33.0717 9.79649 33.123 10.1384H35.044C34.965 9.80063 34.9246 9.45304 34.9238 9.1039C34.9238 7.98863 35.3206 6.91902 36.0264 6.13038C36.7323 5.34177 37.6894 4.89873 38.6876 4.89873ZM38.6876 13.3039C37.8538 13.3039 37.0435 12.9946 36.3841 12.4244C35.7246 11.8543 35.2532 11.0557 35.044 10.1539H33.123C33.3175 11.4324 33.86 12.6129 34.6769 13.5343C35.4938 14.4557 36.5451 15.0733 37.6875 15.3029C38.83 15.5325 40.0082 15.3629 41.0612 14.8173C42.1142 14.2717 42.9911 13.3765 43.5722 12.2539H41.1738C40.4876 12.9313 39.6032 13.3047 38.6876 13.3039Z" fill="currentColor"/>
              <path fillRule="evenodd" clipRule="evenodd" d="M48.0906 9.10389C48.0906 8.2732 48.311 7.46119 48.7244 6.77051C49.1373 6.07979 49.7244 5.54149 50.4114 5.22361C51.0985 4.90572 51.854 4.82253 52.5836 4.98459C53.3128 5.14664 53.9822 5.54667 54.5082 6.13405C55.0336 6.72143 55.392 7.46977 55.5369 8.28453C55.6822 9.09924 55.6077 9.94374 55.3235 10.7112C55.0387 11.4786 54.5568 12.1346 53.9383 12.596C53.3202 13.0576 52.5938 13.3039 51.8503 13.3039C50.8531 13.3039 49.8966 12.8614 49.1915 12.0737C48.4869 11.2861 48.0906 10.2178 48.0906 9.10389ZM51.8503 2.79872C50.7336 2.7977 49.642 3.16662 48.7133 3.85882C47.7846 4.55102 47.0606 5.53539 46.6328 6.68744C46.2049 7.83944 46.0923 9.10736 46.3095 10.3308C46.5267 11.5542 47.0639 12.6782 47.8531 13.5605C48.642 14.4428 49.6475 15.0438 50.7424 15.2875C51.8373 15.5312 52.9725 15.4067 54.004 14.9296C55.0355 14.4525 55.9174 13.6444 56.5378 12.6074C57.1577 11.5704 57.4887 10.3512 57.4887 9.10389C57.4906 8.27501 57.3466 7.45389 57.0637 6.68744C56.7813 5.921 56.366 5.22432 55.8424 4.63725C55.3184 4.05019 54.6961 3.58427 54.0114 3.26613C53.3262 2.94799 52.592 2.78388 51.8503 2.7832V2.79872Z" fill="currentColor"/>
              <path fillRule="evenodd" clipRule="evenodd" d="M74.4138 15.4039V9.10391C74.4152 9.99062 74.2485 10.8675 73.9244 11.6769C73.6003 12.4864 73.1267 13.2101 72.5346 13.8005V15.4039H74.4138ZM72.5346 9.10391C72.5346 9.93564 72.3138 10.7486 71.9003 11.4402C71.4865 12.1317 70.899 12.6707 70.211 12.989C69.5235 13.3073 68.7666 13.3906 68.0365 13.2283C67.3064 13.066 66.6355 12.6655 66.1092 12.0774C65.5828 11.4893 65.2244 10.7401 65.0791 9.92431C64.9342 9.10857 65.0082 8.26309 65.2929 7.49467C65.5781 6.72626 66.0605 6.06952 66.6795 5.60745C67.2985 5.14537 68.0263 4.89875 68.7707 4.89875C69.7656 4.90421 70.7184 5.34968 71.4203 6.13769C72.1221 6.92576 72.5161 7.99221 72.5161 9.10391H72.5346ZM68.7707 15.4039C69.8874 15.4049 70.9791 15.0359 71.9078 14.3435C72.8365 13.651 73.5605 12.6664 73.9878 11.5141C74.4156 10.3617 74.5281 9.09352 74.3105 7.86993C74.0929 6.64635 73.5554 5.52242 72.7661 4.64032C71.9763 3.75821 70.9703 3.1576 69.8754 2.91448C68.78 2.67136 67.6448 2.79666 66.6133 3.27452C65.5818 3.75238 64.7008 4.56134 64.0809 5.59901C63.461 6.63667 63.1309 7.85643 63.1318 9.10391C63.1309 9.93166 63.2754 10.7515 63.5582 11.5164C63.8411 12.2814 64.2568 12.9764 64.7809 13.5618C65.3045 14.147 65.9267 14.611 66.6115 14.9271C67.2962 15.2433 68.03 15.4053 68.7707 15.4039Z" fill="currentColor"/>
              <path d="M61.2478 2.79871H59.3682V15.4039H61.2478V2.79871Z" fill="currentColor"/>
              <path fillRule="evenodd" clipRule="evenodd" d="M21.7618 15.4039V13.8005C21.1697 13.2101 20.6959 12.4864 20.372 11.6769C20.0481 10.8675 19.8809 9.99061 19.8819 9.1039V15.4039H21.7618ZM21.7618 9.1039C21.7441 8.53964 21.828 7.97714 22.0091 7.44997C22.1901 6.9228 22.4646 6.44176 22.8157 6.03557C23.1667 5.62936 23.5874 5.3063 24.0526 5.08565C24.5178 4.865 25.018 4.75128 25.5233 4.75128C26.0288 4.75128 26.5289 4.865 26.9941 5.08565C27.4593 5.3063 27.88 5.62936 28.2311 6.03557C28.5821 6.44176 28.8561 6.9228 29.0372 7.44997C29.2182 7.97714 29.3026 8.53964 29.285 9.1039V13.8005C30.137 12.9493 30.7377 11.8291 31.0075 10.5881C31.2772 9.34711 31.2032 8.04387 30.7954 6.8508C30.3877 5.65779 29.6653 4.63121 28.7239 3.90696C27.7824 3.18271 26.6664 2.79492 25.5233 2.79492C24.3803 2.79492 23.2643 3.18271 22.3229 3.90696C21.3814 4.63121 20.659 5.65779 20.2513 6.8508C19.8435 8.04387 19.7695 9.34711 20.0392 10.5881C20.309 11.8291 20.9097 12.9493 21.7618 13.8005V9.1039ZM29.285 13.8005V15.4039H31.1644V9.1039C31.1653 9.99061 30.9987 10.8675 30.6747 11.6769C30.3508 12.4864 29.877 13.2101 29.285 13.8005Z" fill="currentColor"/>
              <path fillRule="evenodd" clipRule="evenodd" d="M76.2941 2.78326V9.08841C76.2927 8.20175 76.4598 7.32487 76.7839 6.51544C77.108 5.70597 77.5811 4.98226 78.1732 4.39187V2.78326H76.2941ZM78.1732 9.08841C78.1723 8.25627 78.3927 7.44255 78.8056 6.75022C79.2191 6.05789 79.807 5.5181 80.495 5.19918C81.183 4.88026 81.9399 4.79655 82.6705 4.95864C83.401 5.12074 84.0718 5.52133 84.5987 6.10977C85.1255 6.69818 85.4839 7.44793 85.6292 8.26413C85.7742 9.08034 85.6992 9.92629 85.414 10.6949C85.1283 11.4635 84.645 12.1202 84.0255 12.5819C83.4056 13.0435 82.6774 13.2894 81.9325 13.2884C80.9385 13.2871 79.9848 12.8463 79.2806 12.0623C78.576 11.2783 78.1783 10.2148 78.1732 9.10392V9.08841ZM81.9325 2.78326C80.8163 2.78326 79.7251 3.15305 78.7973 3.84587C77.8691 4.53869 77.1459 5.52343 76.7191 6.67553C76.2918 7.82768 76.1797 9.09544 76.3973 10.3185C76.6154 11.5416 77.1529 12.6651 77.9422 13.5469C78.7316 14.4287 79.7371 15.0292 80.8316 15.2724C81.9265 15.5158 83.0612 15.3909 84.0922 14.9136C85.1237 14.4364 86.0052 13.6283 86.6251 12.5914C87.245 11.5545 87.5765 10.3355 87.5765 9.08841C87.5792 8.25948 87.4353 7.43805 87.1529 6.67149C86.87 5.90499 86.4547 5.20855 85.9302 4.62238C85.4056 4.03621 84.782 3.57189 84.0959 3.25624C83.4098 2.94059 82.6746 2.77984 81.9325 2.78326Z" fill="currentColor"/>
            </svg>
          </NavLink>
        </nav>
        <div className="journal__filter">
          <Dropdown state={operation} setState={setOperation} title="Операция" items={filterTypeList ? filterTypeList[1].data : null} dropdownType="operations" />
          <Dropdown state={category} setState={setCategory}  title="Категория" items={categories ? categories : []} dropdownType="categories" />
          <DropdownByPeriod start={startPeriod} end={endPeriod} setStart={setStartPeriod} setEnd={setEndPeriod}  title="Период" />
          <Dropdown state={wallet} setState={setWallet}  title="Кошелек" items={filterTypeList ? filterTypeList[0].data : null} dropdownType="wallets" />
          <SearchInput state={counterparty} setState={setCounterparty}  title="Контрагент" items={filterTypeList ? filterTypeList[4].data : null} />
          <Dropdown state={users} setState={setUsers}  title="Пользователь" items={filterTypeList ? filterTypeList[3].data : null} dropdownType="users" />
        </div>
      </div>
      {loading ? (
      <LoadingBox></LoadingBox>
      ) : error ? (
      <MessageBox varinat="danger">{error}</MessageBox>
      ) : (
      <>
      <div className="transaction__block">
        {media ? 
        (<>
          <div className="transaction__title-block">Последние транзакции</div>
            <RenderAdaptiveTransaction  transactions={transactions} />
          </>) : <RenderTransaction transactions={transactions} />}
      </div> 
    </>)}
    </section>
  );
}